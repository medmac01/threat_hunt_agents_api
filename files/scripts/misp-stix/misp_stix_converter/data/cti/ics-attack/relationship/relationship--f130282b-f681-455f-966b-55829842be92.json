{
    "type": "bundle",
    "id": "bundle--9da95148-4627-4023-80a4-6f3be2a22fe0",
    "spec_version": "2.0",
    "objects": [
        {
            "type": "relationship",
            "id": "relationship--f130282b-f681-455f-966b-55829842be92",
            "created": "2017-12-14T16:46:06.044Z",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "revoked": false,
            "external_references": [
                {
                    "source_name": "Ralph Langner November 2013",
                    "description": "Ralph Langner 2013, November To Kill a Centrifuge: A Technical Analysis of What Stuxnet's Creators Tried to Achieve Retrieved. 2018/03/27 ",
                    "url": "https://www.langner.com/wp-content/uploads/2017/03/to-kill-a-centrifuge.pdf"
                }
            ],
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "modified": "2022-09-20T21:23:20.356Z",
            "description": "One of [Stuxnet](https://attack.mitre.org/software/S0603)'s rootkits is contained entirely in the fake s7otbxdx.dll. In order to continue existing undetected on the PLC it needs to account for at least the following situations: read requests for its own malicious code blocks, read requests for infected blocks (OB1, OB35, DP_RECV), and write requests that could overwrite Stuxnets own code. Stuxnet contains code to monitor and intercept these types of requests. The rootkit modifies these requests so that Stuxnets PLC code is not discovered or damaged. (Citation: Ralph Langner November 2013)",
            "relationship_type": "uses",
            "source_ref": "malware--088f1d6e-0783-47c6-9923-9c79b2af43d4",
            "target_ref": "attack-pattern--3b6b9246-43f8-4c69-ad7a-2b11cfe0a0d9",
            "x_mitre_deprecated": false,
            "x_mitre_version": "1.0",
            "x_mitre_attack_spec_version": "2.1.0",
            "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5"
        }
    ]
}